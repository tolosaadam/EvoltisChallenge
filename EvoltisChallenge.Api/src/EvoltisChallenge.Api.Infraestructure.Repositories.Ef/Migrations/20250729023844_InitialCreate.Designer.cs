// <auto-generated />
using System;
using EvoltisChallenge.Api.Infraestructure.Repositories.Ef;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EvoltisChallenge.Api.Infraestructure.Repositories.Ef.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250729023844_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("EvoltisChallenge.Api.Infraestructure.dbEntities.ProductCategoryDb", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("ProductCategories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("12345678-1234-1234-1234-1234567890ab"),
                            Description = "PC peripherals",
                            Name = "Peripherals"
                        },
                        new
                        {
                            Id = new Guid("22345678-1234-1234-1234-1234567890ab"),
                            Description = "Wide clothes",
                            Name = "Clothes"
                        },
                        new
                        {
                            Id = new Guid("32345678-1234-1234-1234-1234567890ab"),
                            Description = "PC hardware",
                            Name = "Hardware"
                        });
                });

            modelBuilder.Entity("EvoltisChallenge.Api.Infraestructure.dbEntities.ProductDb", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<double>("Price")
                        .HasColumnType("double");

                    b.Property<Guid>("ProductCategoryId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("ProductCategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("42345678-1234-1234-1234-1234567890ab"),
                            CreatedAt = new DateTime(2025, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Logitech white",
                            ModifiedAt = new DateTime(2025, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Keyboard",
                            Price = 33.5,
                            ProductCategoryId = new Guid("12345678-1234-1234-1234-1234567890ab")
                        },
                        new
                        {
                            Id = new Guid("52345678-1234-1234-1234-1234567890ab"),
                            CreatedAt = new DateTime(2025, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Logitech black",
                            ModifiedAt = new DateTime(2025, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Mouse",
                            Price = 22.989999999999998,
                            ProductCategoryId = new Guid("12345678-1234-1234-1234-1234567890ab")
                        },
                        new
                        {
                            Id = new Guid("62345678-1234-1234-1234-1234567890ab"),
                            CreatedAt = new DateTime(2025, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Green XXL",
                            ModifiedAt = new DateTime(2025, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Shirt",
                            Price = 15.99,
                            ProductCategoryId = new Guid("22345678-1234-1234-1234-1234567890ab")
                        },
                        new
                        {
                            Id = new Guid("72345678-1234-1234-1234-1234567890ab"),
                            CreatedAt = new DateTime(2025, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "New School",
                            ModifiedAt = new DateTime(2025, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Cap",
                            Price = 10.99,
                            ProductCategoryId = new Guid("22345678-1234-1234-1234-1234567890ab")
                        });
                });

            modelBuilder.Entity("EvoltisChallenge.Api.Infraestructure.dbEntities.ProductDb", b =>
                {
                    b.HasOne("EvoltisChallenge.Api.Infraestructure.dbEntities.ProductCategoryDb", "Category")
                        .WithMany("Products")
                        .HasForeignKey("ProductCategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("EvoltisChallenge.Api.Infraestructure.dbEntities.ProductCategoryDb", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
